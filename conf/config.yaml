
apisix:    # universal configurations
  node_listen:    # APISIX listening port
    - 9080
    - enable_http2: false
      port: 61160
    - enable_http2: false
      port: 61170
  enable_heartbeat: true
  enable_admin: true
  enable_admin_cors: true
  enable_debug: false
  extra_lua_path: /opts/custom_plugins/?.lua;

  enable_dev_mode: false                       # Sets nginx worker_processes to 1 if set to true
  enable_reuseport: true                       # Enable nginx SO_REUSEPORT switch if set to true.
  enable_ipv6: true # Enable nginx IPv6 resolver
  enable_server_tokens: false # Whether the APISIX version number should be shown in Server header

  # proxy_protocol:                   # Proxy Protocol configuration
  #   listen_http_port: 9181          # The port with proxy protocol for http, it differs from node_listen and admin_listen.
  #                                   # This port can only receive http request with proxy protocol, but node_listen & admin_listen
  #                                   # can only receive http request. If you enable proxy protocol, you must use this port to
  #                                   # receive http request with proxy protocol
  #   listen_https_port: 9182         # The port with proxy protocol for https
  #   enable_tcp_pp: true             # Enable the proxy protocol for tcp proxy, it works for stream_proxy.tcp option
  #   enable_tcp_pp_to_upstream: true # Enables the proxy protocol to the upstream server

  proxy_cache:                         # Proxy Caching configuration
    cache_ttl: 10s                     # The default caching time if the upstream does not specify the cache time
    zones:                             # The parameters of a cache
    - name: disk_cache_one             # The name of the cache, administrator can be specify
                                       # which cache to use by name in the admin api
      memory_size: 50m                 # The size of shared memory, it's used to store the cache index
      disk_size: 1G                    # The size of disk, it's used to store the cache data
      disk_path: "/tmp/disk_cache_one" # The path to store the cache data
      cache_levels: "1:2"              # The hierarchy levels of a cache
  #  - name: disk_cache_two
  #    memory_size: 50m
  #    disk_size: 1G
  #    disk_path: "/tmp/disk_cache_two"
  #    cache_levels: "1:2"

  router:
    http: radixtree_host_uri  # radixtree_uri: match route by uri(base on radixtree)
                                # radixtree_host_uri: match route by host + uri(base on radixtree)
                                # radixtree_uri_with_parameter: match route by uri with parameters
    ssl: 'radixtree_sni'        # radixtree_sni: match route by SNI(base on radixtree)

  proxy_mode: http
  dns_resolver:
    - 10.0.0.66
    - 10.0.0.68
  dns_resolver_valid: 30
  resolver_timeout: 5
  ssl:
    enable: false
    listen:
      - port: 9443
        enable_http2: true
    ssl_protocols: "TLSv1.2 TLSv1.3"
    ssl_ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA"

nginx_config:    # config for render the template to genarate nginx.conf
  error_log: "/dev/stderr"
  error_log_level: "warn"    # warn,error
  worker_processes: "auto"
  enable_cpu_affinity: true
  worker_rlimit_nofile: 20480  # the number of files a worker process can open, should be larger than worker_connections
  event:
    worker_connections: 10620
  http:
    enable_access_log: true
    access_log: "/dev/stdout"
    access_log_format: '{"@timestamp":"$time_iso8601","x-real-ip":"$http_X_Real_IP","remote_addr":"$remote_addr","upstream_addr":"$upstream_addr","request_method":"$request_method","status":"$status","body_bytes_sent":"$body_bytes_sent","content_length":"$content_length","server_protocol":"$server_protocol","scheme":"$scheme","http_host":"$http_host","request_uri":"$request_uri","request_body":"$request_body","http_referer":"$http_referer","http_user_agent":"$http_user_agent","http_range":"$http_range","request_time":"$request_time","upstream_response_time":"$upstream_response_time","upstream_status":"$upstream_status","upstream_cache_status":"$upstream_cache_status","http_EEO_ComeFrom":"$http_EEO_ComeFrom","http_EEO_Origin_Domain":"$http_EEO_Origin_Domain","http_eeo_request_id":"$http_eeo_request_id","http_traceparent":"$http_traceparent","upstream_http_traceparent":"$upstream_http_traceparent","http_baggage":"$http_baggage"}'
    access_log_format_escape: json
    keepalive_timeout: "75s"
    client_header_timeout: 60s     # timeout for reading client request header, then 408 (Request Time-out) error is returned to the client
    client_body_timeout: 300s       # timeout for reading client request body, then 408 (Request Time-out) error is returned to the client
    client_max_body_size: 0
    send_timeout: 600s              # timeout for transmitting a response to the client.then the connection is closed
    underscores_in_headers: "on"   # default enables the use of underscores in client request header fields
    real_ip_header: "X-Real-IP"    # http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header
    real_ip_from:                  # http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from
      - 0.0.0.0
      - 'unix:'
    charset: utf-8
    variables_hash_max_size: 2048
    upstream:
      keepalive: 320
      keepalive_requests: 1000
      keepalive_timeout: 60s
    lua_shared_dict:
      prometheus-metrics: 15m
      tracing_buffer: 20m
      discovery: 5m
  http_configuration_snippet:      |
    sendfile  on;
    tcp_nopush  on;
    proxy_buffers 32 32k;
    proxy_buffer_size 128k;
    proxy_busy_buffers_size 128k;
    proxy_ignore_client_abort on;
    proxy_connect_timeout 15;
    proxy_send_timeout 450;
    proxy_read_timeout 450;
    proxy_headers_hash_bucket_size 256;
    proxy_set_header Connection "";
    proxy_http_version 1.1;
    proxy_set_header X-Real-IP $http_X_Real_IP;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
  http_end_configuration_snippet:      |
    server_names_hash_bucket_size 128;
    server_names_hash_max_size 2048;
    default_type application/octet-stream;
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 32k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types text/css text/xml text/plain application/javascript application/json image/gif image/x-icon image/x-ms-bmp;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";
  http_server_configuration_snippet:      "if ($http_X_Real_IP = \"\") {\n  set $http_X_Real_IP $remote_addr; \n}\n"
#discovery:
#  kubernetes: {}
plugins:    # plugin list
  - real-ip
  - ai
  - client-control
  - proxy-control
  - request-id
  - zipkin
  - opentelemetry
  - ext-plugin-pre-req
  - fault-injection
  - mocking
  - serverless-pre-function
  - batch-requests
  - cors
  - ip-restriction
  - ua-restriction
  - referer-restriction
  - csrf
  - uri-blocker
  - request-validation
  - chaitin-waf
  - openid-connect
  - cas-auth
  - authz-casbin
  - authz-casdoor
  - wolf-rbac
  - ldap-auth
  - hmac-auth
  - basic-auth
  - jwt-auth
  - key-auth
  - consumer-restriction
  - forward-auth
  - opa
  - authz-keycloak
  - error-log-logger
  - proxy-cache
  - body-transformer
  - proxy-mirror
  - proxy-rewrite
  - workflow
  - api-breaker
  - limit-conn
  - limit-count
  - limit-req
  - gzip
  - server-info
  - traffic-split
  - redirect
  - response-rewrite
  - degraphql
  - kafka-proxy
  - grpc-transcode
  - grpc-web
  - public-api
  - prometheus
  - loki-logger
  - elasticsearch-logger
  - echo
  - loggly
  - http-logger
  - sls-logger
  - tcp-logger
  - kafka-logger
  - rocketmq-logger
  - syslog
  - udp-logger
  - file-logger
  - clickhouse-logger
  - tencent-cloud-cls
  - inspect
  - log-rotate
  - example-plugin
  - openfunction
  - serverless-post-function
  - ext-plugin-post-req
  - ext-plugin-post-resp
  #- eeo-custom-vars
  #- upstream-host-rewrite
plugin_attr:
  opentelemetry:
    batch_span_processor:
      batch_timeout: 3
      drop_on_queue_full: false
      inactive_timeout: 1
      max_export_batch_size: 32
      max_queue_size: 2048
    collector:
      address: otel-agent.sit13.svc.eeo-test-k8s.dom:4317
    resource:
      service.name: APISIX
    set_ngx_var: true
    trace_id_source: x-request-id
  prometheus:
    enable_export_server: true
    export_addr:
      ip: 0.0.0.0
      port: 9091
    export_uri: /apisix/prometheus/metrics
    metric_prefix: apisix_

deployment:
  role: traditional
  role_traditional:
    config_provider: etcd
  admin:
    allow_admin:    # http://nginx.org/en/docs/http/ngx_http_access_module.html#allow
      - 127.0.0.1/24
      - 0.0.0.0/0
    #   - "::/64"
    admin_listen:
      ip: 0.0.0.0
      port: 9180
    # Default token when use API to call for Admin API.
    # *NOTE*: Highly recommended to modify this value to protect APISIX's Admin API.
    # Disabling this configuration item means that the Admin API does not
    # require any authentication.
    admin_key:
      # admin: can everything for configuration data
      - name: "admin"
        key: "5b54e554ed45426d9af01528b33661f1"
        role: admin
      # viewer: only can view configuration data
      - name: "viewer"
        key: "78420f7fc87a441fa2d349049ec39c90"
        role: viewer
  etcd:
    host:                          # it's possible to define multiple etcd hosts addresses of the same etcd cluster.
      - "http://10.252.9.200:44563"             # multiple etcd address
    prefix: "/apisix_dev"    # configuration prefix in etcd
    timeout: 30    # 30 seconds
    user: "root"
    password: ee0^XuFNHMiQ
    #tls:
    #  cert: ./cert/etcd.pem
    #  key: ./cert/etcd-key.pem

